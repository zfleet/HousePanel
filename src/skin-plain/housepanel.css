/* 
 * This is a simple plain HousePanel skin file 
 * you can edit this file directly but I recommend
 * that instead you copy this entire folder to a new folder
 * renaming it to your new skin name and edit that copy
 * then you can activate the skin in the HousePanel main GUI
 * 
 */


/* all panels look like this */
div.panel {
    display: inline-block;
    border: 0px solid #3333cc;
    padding: 2px;    width: 100%;    margin: auto;
    position:relative;    background-repeat: no-repeat;
    background-position: 0 0;
    background-size: cover;
    min-height: 600px;
}

/* all things look like this */  
/* the heights are set to auto for larger items like weather and thermostats */
div.thing {
    display: inline-block;
    margin: 3px;
    text-align: center;
    vertical-align: top;
    border: 2px solid #333333; 
    background-color: rgba(0, 51, 204, 1);
    box-shadow: none;
    color: rgba(250, 250, 250, 1);
    cursor: default;
    width: auto; 
    height: auto;
    z-index: 2;
}
div.thing:hover{
    position: relative;
    box-shadow: 0px 0px 41px rgba(0, 0, 0, 0.70);
    -moz-box-shadow: 0px 0px 41px rgba(0, 0, 0, 0.70);
    -webkit-box-shadow: 0px 0px 41px rgba(0, 0, 0, 0.70); 
}

div.thing.switch-thing, div.thing.switchlevel-thing, div.thing.bulb-thing {
    height: auto;
    width: auto;
}
div.thing.catalog-thing {
    display: inline-block;
    width: 120px;
}

/* styling defaults without state or specific thing subtypes */
div.switch, div.bulb, div.light, div.switchlevel, div.momentary, div.motion, div.lock, 
div.contact, div.music, div.presence, div.piston, div.valve, div.door, div.temperature {
    background-repeat: no-repeat;
    padding: 0px 0;
    margin: 0;
    cursor: default;
    height: auto;
}

div.switch, div.bulb, div.light, div.switchlevel, div.momentary, div.motion, div.lock, 
div.contact, div.music, div.presence, div.piston, div.valve, div.overlay div.door,
div.overlay.themode div.themode {
    width: 120px;
}

div.switch.on, div.switch.off, div.light.on, div.light.off,
div.presence.present, div.presence.absent, div.door.open, div.door.closed,
div.valve.open, div.valve.closed, div.momentary.on, div.momentary.off {
    height: 70px;
    font-size: 18pt;
    padding-top: 42px;
}

div.lock.locked, div.lock.unlocked, div.lock.unknown, div.motion.active, div.motion.inactive,
div.contact.open, div.contact.closed {
    height: 70px;
    font-size: 18pt;
    padding-top: 42px;
}

/* items that have a pointer */
div.switch, div.bulb, div.light, div.switchlevel, div.momentary, 
div.lock, div.mode.themode, div.piston, div.valve, div.routine.label {
    cursor: pointer;
}

/* the name of the thing - must be after the above heights */
/* added catalog-thing div.thingname to ensure catalog shows properly */
div.thingname, div.thingname.motion, div.thingname.contact, 
div.thingname.lock, div.thingname.piston, catalog-thing div.thingname {
    background-color: #303050;
    font-size: 11pt;
    text-align: center;
    color: #ffffff;
    padding-top: 0px;
    padding-bottom: 0px;
    border-bottom: 5px solid rgba(0,0,0,0.3);
    height: 30px;
    cursor: default;
    display: block;
}
div.thingname:hover {
    background-color: #5050a0; 
    color: #cccccc;
}
div.thingname.door {
    width: 100%;
}


/* style the on and off states of things to not show up */
/* set size to show text to avoid funky resizing, but use transparent color */
/*div.open, div.closed, div.inactive, div.active, div.locked, div.unlocked, div.unknown, 
div.on, div.off, div.present, div.absent, div.firing, div.piston.pistonName {
    font-size: 11pt;
    background-position: center center;
}*/

/* alter the thermostat on and off to show since we don't use an icon here */
div.thermostat.thermomode.off, div.thermostat.thermofan.off,
div.thermostat.thermomode.on, div.thermostat.thermofan.on {
	font-size: 11pt;
        color: #ffffff;
}

/* contact styling - note we changed to generic contact */
div.contact.open {
    color: rgba(255, 255, 255,1.0);
}
div.contact.closed {
    color: rgba(255, 255, 255,1.0);
}
div.contact.mat.open {
    color: rgba(255, 255, 255,1.0);
    background-size: 120px;
}
div.contact.mat.closed {
    color: rgba(255, 255, 255,1.0);
}

/* specific contact types one might find */
div.door.garage {
    cursor: pointer;
}
div.contact.door {
    cursor: default;
}
div.door.open, div.contact.door.open {
    color: rgba(255, 255, 255,1.0);
}
div.door.closed, div.contact.door.closed {
    color: rgba(255, 255, 255,1.0);
}
/* hide the contact part of garage doors that include an embedded contact sensor */
/*div.door-thing div.overlay.contact, div.garage.door.contact {*/
div.door-thing.garage div.contact {
    display: none;
}
div.contact.window.open {
    color: rgba(255, 255, 255,1.0);
}
div.contact.window.closed {
    color: rgba(255, 255, 255,1.0);
}
div.door.garage.open {
    color: rgba(255, 255, 255,1.0);
    cursor: pointer;
}
div.door.garage.closed {
    color: rgba(255, 255, 255,1.0);
    cursor: pointer;
}

/* custom tiles*/
div.custom-thing div.custom.post, div.custom-thing div.custom.text {
    cursor: pointer;
}

/* fill tile with valve image */
div.valve.open {
    color: rgba(255, 255, 255,1.0);
}
div.valve.closed {
    color: rgba(255, 255, 255,1.0);
}
div.valve.switch, div.valve.contact, div.valve.stopWatering, div.valve.log  {
    display: none;
}
div.valve.startZone, div.valve.pause {
    background-color: rgba(50,50,50,1);
    cursor: pointer;
}
/* special handling of garage entry which is a door */
div.contact.garage.entry.open {
    color: rgba(255, 255, 255,1.0);
}
div.contact.garage.entry.closed {
    color: rgba(255, 255, 255,1.0);
}

/* motion styling */
div.motion.inactive {
    color: rgba(255, 255, 255,1.0);
}
div.motion.active {
    color: rgba(255, 255, 255,1.0);
}

/* switch styling */

div.switch.on, div.switch.light.on, div.switchlevel.on, div.bulb.on, div.light.on {
    color: rgba(255, 255, 255,1.0);
}
div.switch.off, div.switch.light.off, div.switchlevel.off, div.bulb.off, div.light.off {
    color: rgba(255, 255, 255,1.0);
}
/* enable this if you want to show levels for switches and bulbs */
/* this will duplicate the switchlevel functionality */
div.switch.level {
    display: none;
}

/* new style uses overlay to put in bottom right corner */

div.overlay.power, div.overlay.energy {
	position: absolute; top: 32px; left: 0px;
	z-index: 100;
        border: none;
        background: none;
	height: auto;
}
div.overlay.power div.switch.power {
    z-index: 101;
    display: block;
    float: left;
    height: 12px;
    text-align: left;
    color: rgba(10,96,10,1);
    font-weight: bold;
    font-size: 10pt;
    margin-left: 5px;
}
div.overlay.energy div.switch.energy {
    z-index: 101;
    display: block;
    float: right;
    height: 12px;
    text-align: right;
    color: rgba(10,96,10,1);
    font-weight: bold;
    font-size: 10pt;
}

/* switchlevel / dimmer styling - make room for the dimmer controls */
/* if you have a dimmer with power and energy controls - see custom below */
div.switchlevel.switch, div.bulb.switch {
    height: 80px;
}
div.switchlevel.colorTemperature, div.switchlevel.hue, div.switchlevel.saturation {
    height: 32px;
}

div.switchlevel.level, div.bulb.level, div.music.level {
    height: 4px;
}

/* momentary styling */
div.momentary.off {
    color: rgba(255, 255, 255,1.0);
}
div.momentary.on {
    color: rgba(255, 255, 255,1.0);
}

/* hover over on and off states */
/*div.on:hover, div.off:hover, div.unlocked:hover, div.locked:hover {
  background-color: rgba(51, 51, 51, 0.3);
}*/

/* up and down arrows */
div.heat-dn, div.cool-dn, div.level-dn, div.switchlevel-dn,
div.heat-up, div.cool-up, div.level-up, div.switchlevel-up,
div.colorTemperature-up, div.colorTemperature-dn,
div.hue-up, div.hue-dn,
div.saturation-up, div.saturation-dn
{
    display: inline-block;
    width: 32px; height: 32px;
    border: 0px; padding: 0px;
    cursor: pointer;
}
div.heat-dn, div.cool-dn, div.level-dn, div.switchlevel-dn, div.music div.vol-dn,
div.colorTemperature-dn, div.hue-dn, div.saturation-dn {
    background-image: url("media/sprites.gif");
    color: rgba(255, 255, 255,1.0);
    background-position: -32px 0px;
	background-size: auto;
/*    border-top-left-radius: 25px;
    border-bottom-left-radius: 25px; */
    box-shadow: 0px 1px 2px rgba(0,0,0,0.8);
    -webkit-box-shadow: 0px 1px 2px rgba(0,0,0,0.8);
    -moz-box-shadow: 0px 1px 2px rgba(0,0,0,0.8);
}

div.heat-up, div.cool-up, div.level-up, div.switchlevel-up, div.music div.vol-up,
div.colorTemperature-up, div.hue-up, div.saturation-up {
    background-image: url("media/sprites.gif");
    color: rgba(255, 255, 255,1.0);
    background-position: -272px -2px;
	background-size: auto;
/*    border-top-right-radius: 25px;
    border-bottom-right-radius: 25px; */
    box-shadow: 0px 1px 2px rgba(0,0,0,0.8);
    -webkit-box-shadow: 0px 1px 2px rgba(0,0,0,0.8);
    -moz-box-shadow: 0px 1px 2px rgba(0,0,0,0.8);
}

/* music styling */
div.music.level, div.music.vol {
    width: 99%;
}
div.music-controls {
    cursor: pointer;
}
div.music-previous, div.music-pause, div.music-stop, div.music-play, div.music-next {
    /*background-image: url("media/Media-Player-Buttons.png");*/
    color: rgba(255, 255, 255,1.0);
    background-size: 38px;
    display: inline-block;
    background-repeat: no-repeat;
    height:38px; 
    width: 32px;
    /*background-position: -160px -4px;*/
    margin-top: 5px;
    /*position: absolute;*/
}
div.music-pause {
    background-image: url("media/pause.png");
}
div.music-stop {
    background-image: url("media/stop.png");
}
div.music-play {
    background-image: url("media/play.png");
}
div.music-previous {
    background-image: url("media/prev.png");
}
div.music-next {
    background-image: url("media/next.png");
}

/* make thermostat height auto */
div.thing.thermostat-thing{
    background-color: rgba(100,100,100,0.4);
    height: auto;
}

/*div.overlay.temperature, div.overlay.feelsLike {
    display: inline-block;
}*/

/* individual temperature value inside a thermostat */
div.thermostat.temperature,
div.overlay.temperature div.temperature,
div.weather.temperature, div.weather.feelsLike {
    display: inline-block;
    background-color: #006666;
    color: #ffffee;
    border: 2px solid white;
    box-shadow: 5px 4px 15px black;
    cursor: default;
    text-align: center;
    height: 50px;
    width: 50px;
    padding: 4px 3px 0 3px;
    margin: 10px 12px 10px 12px;
    border-radius: 50%;
    font-size: 20px;
    line-height: 45px;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
}


div.thermostat.thermofan, div.thermostat.thermomode {
    cursor: pointer;
    height: auto;
}
div.thermostat.thermomode.off, div.thermostat.thermofan.off,
div.thermostat.thermomode.on, div.thermostat.thermofan.on,
div.thermostat.thermostate, div.thermostat.humidity  {
	background-color: #333333;
	font-size: 11pt;
	height: auto;
        margin: 0; padding: 0;
        color: #ffffff;
}
div.thermostat.thermomode.on, div.thermostat.thermofan.on {
    background-color: #3333ff;
}
div.thermostat.thermomode.heat {
    background-color: #ff3300;
}
div.thermostat.thermomode.cool {
    background-color: #3333ff;
}
div.thermostat.thermomode.auto, div.thermostat.thermofan.auto {
    background-color: #009999;
}
div.thermostat.humidity {
    background-color: #666666;
}
div.thermostat.thermostate, div.thermostat.humidity {
    cursor: default;
}
div.thermostat.thermofan::before {
    content: "Fan: ";
}
div.thermostat.thermomode::before {
    content: "Mode: ";
}
div.thermostat.thermostate::before {
    content: "State: ";
}
div.thermostat.humidity::before {
    content: "Humidity: ";
}
div.thermostat.humidity::after {
    content: "%";
}

/* values of the adjustable items */
div.heat-val, div.cool-val, div.level-val, div.switchlevel-val,
div.colorTemperature-val, div.hue-val, div.saturation-val, div.vol-val {
    display: inline-block;
    position: relative;
    left: 0px; top: 0px;
    text-align: center;
    vertical-align: top;
    font-size: 18px;
    width: 72px;
    height: 26px;
    padding-top: 6px;
    color: #ffffff;
    border: 0px;
}

div.heat-val {
    background-color: #cc3300;
    box-shadow: 0px 1px 2px rgba(0,0,0,0.8);
    -webkit-box-shadow: 0px 1px 2px rgba(0,0,0,0.8);
    -moz-box-shadow: 0px 1px 2px rgba(0,0,0,0.8);	
}
div.cool-val {
    background-color: #0033cc;
    box-shadow: 0px 1px 2px rgba(0,0,0,0.8);
    -webkit-box-shadow: 0px 1px 2px rgba(0,0,0,0.8);
    -moz-box-shadow: 0px 1px 2px rgba(0,0,0,0.8);	
}
div.colorTemperature-val, div.hue-val, div.saturation-val {
    background-color: #ffffff;
    color: #000000;
}
div.thermostat.thermomode, div.thermostat.thermofan, div.thermostat.thermofan.on,
div.thermostat.thermostate, div.thermostat.humidity {
    width: 98%;
    padding-left: 1%; 
    padding-right: 1%;
}

div.thing.temperature-thing {
    height: 147px;
}
/* hover over the adjustment arrows */
div.heat-up:hover, div.heat-dn:hover, 
div.cool-up:hover, div.cool-dn:hover,
div.switchlevel-up:hover, div.switchlevel-dn:hover,
div.colorTemperature-up:hover, div.colorTemperature-dn:hover,
div.hue-up:hover, div.hue-dn:hover,
div.saturation-up:hover, div.saturation-dn:hover,
div.vol-up:hover, div.vol-dn:hover,
div.level-up:hover, div.level-dn:hover {
    border: 2px solid #303030;
    width: 28px;
    height: 28px;
}

/* music styling */
div.thing.music-thing {
    background-color: rgba(80,0,50,0.4);
    width: 180px;
    height: auto;
}
div.thingname.music {
    width: 180px;
}
/* use italic serif font for music titles and a custom size */
div.music.track {
    font-family: "Raleway",serif;
    font-size: 11pt;
    font-style: italic;
    height: 48px;
    width: 180px;
    padding-top: 2px;
    border-bottom: none;
    background-color: rgba(80, 80, 80, 0.7);
}
div.music.musicstatus, div.music.musicmute {
    height: 24px;
    width: 180px;
    font-size: 11pt;
    background-color: rgba(80, 80, 80, 0.7);
}

/* pistons */
div.piston-thing, div.music.musicmute  {
    cursor: pointer;
}
div.piston.webcore {
    display: none;
}
div.piston.pistonName {
    color: rgba(102,102,102,0.01);
}
div.piston.pistonName.firing {
    color: rgba(255, 255, 255,1.0);
}
/* weather styling */
div.thing.weather-thing {
    background-color: rgba(0,0,0,0.01);
    width: 240px;
    text-align: center;
    height: auto;
}
div.thingname.weather {
    width: 92%;
    padding-left: 4%; 
    padding-right: 4%;
}
div.overlay.temperature div.weather.temperature, div.overlay.feelsLike div.weather.feelsLike {
    display: inline-block;
    width: 118px;
    background-color: #006666;
    color: #ffffee;
    border: 2px solid white;
    box-shadow: 5px 4px 15px black;
    cursor: default;
    text-align: center;
    height: 70px;
    width: 70px;
    padding: 4px 3px 0 3px;
    margin-top: 10px;
    margin-bottom: 10px;
    margin-left: 10px;
    margin-right: 10px;
    border-radius: 50%;
    font-size: 20px;
    line-height: 55px;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
}
div.weather.feelsLike::before {
    content: "Like: ";
    font-size: 8pt;
}
div.weather img {
    margin-left: 15px;
    margin-right: 15px;
}
div.weather.wind::before {
    content: "Wind: ";
}
div.weather.wind::after {
    content: " mph";
}
div.weather.humidity::before {
    content: "Humidity: ";
}
div.weather.percentPrecip::before {
    content: "Rain: ";
}
div.weather.humidity::after, div.weather.percentPrecip::after {
    content: "%";
}
div.weather.illuminance::after {
    content: " Lux";
}
div.weather.sunriseset {
    margin-top: 10px;
}
div.weather.sunriseset, div.weather.humidity,
div.weather.wind, div.weather.percentPrecip, div.weather.alert, div.weather.illuminance {
    background-color: #333333;
    margin-bottom: 0px;
}
div.weather.timeZoneOffset, div.weather.alertKeys,
div.weather.sunriseDate, div.weather.sunsetDate,
div.weather.ultravioletIndex, div.weather.lastUpdate {
    display: none;
}
div.weather.weatherIcon, div.weather.forecastIcon {
    display: inline-block;
}
div.temperature-thing, div.thingname.temperature {
    width: 120px;
}

/* clock styling */
div.thing.clock-thing {
    height: 150px;
    width: 246px;
}
div.thing.clock-thing.analog {
    background-color: white;
}
div.clock.weekday {
    margin-top: 0px;
    margin-bottom: 0px;
}
div.clock.time {
    font-size: 36pt;
    margin-top: 12px;
}
div.clock.tzone{
    display:none;
}

/* mode and routine styling */
div.thingname.mode {
    display: none;
}
div.thing.mode-thing, div.thing.shm-thing {
    width: auto;
    height: 150px;
}

div.mode.themode, div.shm.state {
    font-size: 20pt;    margin-top: 10px;
    cursor: pointer;
}
div.shm.state.off, div.shm.state.stay, div.shm.state.away {
    color: rgba(255, 255, 255, 1);
}
div.shm.state {
    background-size: 70px;
    background-repeat: no-repeat;
    height: 90px;
    background-position-x: center;
    background-position-y: bottom;
}
div.mode-thing div.name {
    font-size: 12pt;    margin-top: 30px;
}
div.mode-thing div.sitename {
    margin-top: 45px;
}

div.routine.label {
    font-size: 18pt;    margin-top: 20px;
}

/* images */
div.thing.image-thing {
    border: 0px none;
    padding: 0;
    background-color: rgba(255,255,255,0.01);
    color: #ffffff;
    box-shadow: none;
    width: auto;
    height: auto;
}
div.image.url {
    width: 246px;
    height: 160px;
    font-size: 0px;
    background-color: #000000;
    background-repeat: no-repeat;
    background-position: center;
}

/* presence styling */
div.presence.present {
    color: rgba(255, 255, 255,1.0);
}
div.presence.absent {
    color: rgba(255, 255, 255,1.0);
}

div.bulb.color, div.light.color {
    position: absolute;
    left: 8px;
    top: 44px;
    height: 32px;
    width: 32px;
    /*border-radius: 50%;*/
    font-size: 12px;
    display: none;
    cursor: pointer;
    z-index: 9999;
}
div.bulb.colorMode {
    display: none;
}

div.custom.post {
    height: 80px;
    color: rgba(255, 255, 255, 1);
}
div.custom.text {
    height: 30px;
    color: rgba(255, 255, 255, 1);
}

/* do not display these items */
div.checkInterval, div.switchlevel.checkInterval, div.switchlevel.indicatorStatus, 
div.switch.checkInterval, div.motion.checkInterval, div.switch.indicatorStatus, 
div.contact.checkInterval,
div.switch.colorTemperature, div.lock.checkInterval,
div.lock.codeChanged, div.lock.lockCodes, div.lock.scanCodes,
div.lock.codeReport, div.lock.maxCodes, div.lock.maxCodeLength,
div.lock.minCodeLength, div.lock.codeLength,
div.thingname.blank, div.thingname.clock,
div.thingname.image, div.thingname.routine
 {
    display:none;
}

/* for weather illuminance avoid showing T and fix humidity */
div.illuminance-thing .overlay.temperature {
    display: none;
}
div.illuminance-thing .illuminance.humidity:after {
    content: "%";
}

div.switchlevel.colorTemperature, div.bulb.colorTemperature {
    height: 4px;
}


/* hide the power and energy for my screen switch */
div.switchlevel.screen.power, div.switchlevel.screen.energy {
    display:none;
}

iframe body {
    margin: 0px;
}
/*div.thing.frame-thing {
    width: auto;
    height: auto;
    background: none;
    box-shadow: none;
    margin: 0px;
}*/
div.thing.frame-thing.weather div.thingname.frame {
    width: 480px;
    margin-left: 13px;
    padding: 0;
}
div.thing.frame-thing.weather {
    width: 500px;
    height: 250px;
    background-color: rgba(0, 0, 0,1.0);
    border: 0; 
}
div.thing.frame-thing div.overlay.status {
    display: none;
}
/* this custom setting moves power and energy up for my yard switches */
/* note that I have to also change the size of the wrapper tile to fixed */
/* alternatively you could change the height of just a specific switch */
/* to a fixed height of 160 - if you do that you need the id */
/* and do something like #t-82 where 82 is the ID of the thing you want */
/*  div.thing.switch-thing, div.thing.switchlevel-thing {
    height: 160px;
}
*/
div.frame.forecast {
    height: 200px;
}

/*div.switch.yard.energy {
    position: relative; top: -16px;
}
div.switch.yard.power {
    position: relative; top: -48px;
}*/
div.thing.video-thing {
    width: 246px;
    height: 147px;
}
div.thingname.video {
    display: none;
}

div.overlay.battery {
	position: absolute;
	z-index: 10;
        border: none;
        background: none;
	left: 2px;
	/*top: 2px;*/
	/*width: 100%;*/
	height: auto;
}
div.weather-thing div.overlay {
    display: inline;
}
div.overlay.weatherIcon div.weather, div.overlay.forecastIcon div.weather {
    background-position-y: 8px;
    width: 80px;
    height: 74px;
    padding-top: 6px;
    margin-left: 8px; margin-right: 8px;
    color: rgba(0, 0, 0, 1);
    background-size: 80px;
}
div.overlay.healthStatus {
    display: none;
}

/* default weather name and city to not show */
div.weather-thing div.overlay.name, div.weather-thing div.overlay.city {
    display: none;
    position: relative;
}

/* weather icons */
div.overlay.weatherIcon div.clear, div.overlay.forecastIcon div.clear {
    background-image: url("media/clear.png");
}
div.overlay.weatherIcon div.mostlysunny, div.overlay.forecastIcon div.mostlysunny {
    background-image: url("media/partlysunny.png");
}
div.overlay.weatherIcon div.partlysunny, div.overlay.forecastIcon div.partlysunny {
    background-image: url("media/partlysunny.png");
}
div.overlay.weatherIcon div.rain, div.overlay.forecastIcon div.rain {
    background-image: url("media/rain.png");
}
div.overlay.weatherIcon div.chancerain, div.overlay.forecastIcon div.chancerain {
    background-image: url("media/rain.png");
}
div.overlay.weatherIcon div.snow, div.overlay.forecastIcon div.snow {
    background-image: url("media/snow.png");
}
div.overlay.weatherIcon div.chancesnow, div.overlay.forecastIcon div.chancesnow {
    background-image: url("media/snow.png");
}
div.overlay.weatherIcon div.tstorms, div.overlay.forecastIcon div.tstorms {
    background-image: url("media/tstorms.png");
}
div.overlay.weatherIcon div.chancetstorms, div.overlay.forecastIcon div.chancetstorms {
    background-image: url("media/tstorms.png");
}
div.overlay.weatherIcon div.cloudy, div.overlay.forecastIcon div.cloudy {
    background-image: url("media/cloudy.png");
}
div.overlay.weatherIcon div.mostlycloudy, div.overlay.forecastIcon div.mostlycloudy {
    background-image: url("media/mostlycloudy.png");
}
div.overlay.weatherIcon div.partlycloudy, div.overlay.forecastIcon div.partlycloudy {
    background-image: url("media/partlycloudy.png");
}
div.overlay.weatherIcon div.windy, div.overlay.forecastIcon div.windy {
    background-image: url("media/windy.png");
}
div.overlay.weatherIcon div.sleet, div.overlay.forecastIcon div.sleet {
    background-image: url("media/rain.png");
}

